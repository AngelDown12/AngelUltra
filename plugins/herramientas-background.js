import axios from 'axios';

let handler = async (m, { usedPrefix, command, conn, text }) => {
  if (!text) {
    return m.reply(`üîé Por favor, ingresa un usuario de Instagram para stalkear.\n> *Ejemplo:* ${usedPrefix + command} dev.criss_vxx`);
  }

  try {
    await m.react('‚è≥');

    // Solicitar datos a la API
    const { data: res } = await axios.get(`https://api.vreden.my.id/api/igstalk?query=${text}`);

    // Depuraci√≥n: Ver respuesta completa de la API
    console.log(res);

    // Verificar que la respuesta sea v√°lida y tenga los datos necesarios
    if (!res || res.status !== 200 || !res.data || !res.data.username) {
      throw 'Usuario no encontrado o datos incompletos.';
    }

    const user = res.data;

    // Validar que los campos existen antes de usarlos
    const profilePic = user.profile_pic_url_hd || 'https://files.catbox.moe/xr2m6u.jpg';
    const fullName = user.full_name || 'No disponible';
    const biography = user.biography || 'Sin descripci√≥n';
    const externalUrl = user.external_url || 'No disponible';
    const language = user.language || 'Desconocido';

    // Crear el texto con la informaci√≥n del usuario
    const teks = `‰πÇ *STALKER - INSTAGRAM*\n\n` +
      `*‚ó¶ Usuario:* ${user.username}\n` +
      `*‚ó¶ Nombre completo:* ${fullName}\n` +
      `*‚ó¶ ID:* ${user.id}\n` +
      `*‚ó¶ Seguidores:* ${user.followers_count}\n` +
      `*‚ó¶ Siguiendo:* ${user.following_count}\n` +
      `*‚ó¶ Publicaciones:* ${user.media_count}\n` +
      `*‚ó¶ Descripci√≥n:* ${biography}\n` +
      `*‚ó¶ Web:* ${externalUrl}\n` +
      `*‚ó¶ Verificada:* ${user.is_verified ? '‚úÖ S√≠' : '‚ùå No'}\n` +
      `*‚ó¶ Tipo de cuenta:* ${user.is_business_account ? 'üè¢ Comercial' : 'üë§ Personal'}\n` +
      `*‚ó¶ Lenguaje:* ${language}`;

    // Enviar mensaje con la foto de perfil y la informaci√≥n
    await conn.sendMessage(m.chat, { image: { url: profilePic }, caption: teks.trim() }, { quoted: m });
    await m.react('‚úÖ');

  } catch (err) {
    console.error('Error en IGStalk:', err);

    // Detectamos tipo de error
    let errorMsg = '*‚ùå Error: No se encontr√≥ el usuario o la API fall√≥. Intenta nuevamente.*';

    if (axios.isAxiosError(err)) {
      if (err.code === 'ECONNABORTED') {
        errorMsg = '*‚ùå Error: La API tard√≥ demasiado en responder (timeout).*';
      } else if (err.response) {
        errorMsg = `*‚ùå Error: Fallo del servidor (${err.response.status}).*`;
      }
    } else if (typeof err === 'string') {
      errorMsg = `*‚ùå ${err}*`;
    }

    m.reply(errorMsg);
  }
};

handler.help = ['instastalk *<usuario>*'];
handler.tags = ['stalk'];
handler.command = /^(instastalk|stalkinsta|igstalk)$/i;
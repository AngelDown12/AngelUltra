/*const handler = async (m, { text, conn, args, usedPrefix, command }) => {

    if (args.length < 2) {  
        conn.reply(m.chat, `*${xff} Proporciona una hora seguido el pa√≠s y una modalidad para crear una lista de VS.*
*Usa AR para Argentina y PE para Per√∫.*
> *\`Ejemplo:\`* ${usedPrefix + command} 14 pe infinito`, m);
        return;
    }

    // Nueva validaci√≥n para formato de 24 horas
    const horaRegex = /^([01]?[0-9]|2[0-3])(:[0-5][0-9])?$/;  
    if (!horaRegex.test(args[0])) {  
        conn.reply(m.chat, '*‚è∞ El formato horario es incorrecto.*', m);  
        return;  
    }  

    let [hora, minutos] = args[0].includes(':') ? args[0].split(':').map(Number) : [Number(args[0]), 0];

    const pais = args[1].toUpperCase();  

    const diferenciasHorarias = {  
        CL: 2,  // UTC-4  
        AR: 2,  // UTC-3  
        PE: 0,  // UTC-5  
    };  

    if (!(pais in diferenciasHorarias)) {  
        conn.reply(m.chat, '*‚ö†Ô∏è El pa√≠s ingresado no v√°lido. Usa AR para Argentina, PE para Per√∫.*', m);  
        return;  
    }  

    const diferenciaHoraria = diferenciasHorarias[pais];  
    const formatTime = (date) => date.toLocaleTimeString('es', { hour12: false, hour: '2-digit', minute: '2-digit' });  

    const horasEnPais = { CL: '', AR: '', PE: '' };  

    for (const key in diferenciasHorarias) {  
        const horaActual = new Date();  
        horaActual.setHours(hora, minutos, 0, 0);

        const horaEnPais = new Date(horaActual.getTime() + (3600000 * (diferenciasHorarias[key] - diferenciaHoraria)));  
        horasEnPais[key] = formatTime(horaEnPais);  
    }  

    const modalidad = args.slice(2).join(' ');  
    m.react('üéÆ');  

    // Configuraci√≥n de la modalidad seg√∫n el comando usado
    let titulo = '';
    let players = [];
    let iconos = [];
    let iconos2 = [];

    switch (command) {
        case 'v4fem':
        case 'vsfem4':
            titulo = '4VS4 FEM';
            players = ['ùñ©ùóéùóÄùñ∫ùñΩùóàùóãùñ∫ùóå'];
            iconos = ['üå∏', 'üå∏', 'üå∏', 'üå∏'];
            iconos2 = ['üå∏', 'üå∏'];
            break;
        case 'v4masc':
        case 'vsmasc4':
            titulo = '4VS4 MASC';
            players = ['ùñ©ùóéùóÄùñ∫ùñΩùóàùóãùñæùóå::'];
            iconos = ['ü••', 'ü••', 'ü••', 'ü••'];
            iconos2 = ['ü••', 'ü••'];
            break;
        case 'v4mixto':
        case 'vsmixto4':
            titulo = '4VS4 MIXTO';
            players = ['ùñ©ùóéùóÄùñ∫ùñΩùóàùóãùñæùóå'];
            iconos = ['üçÅ', 'üçÅ', 'üçÅ', 'üçÅ'];
            iconos2 = ['üçÅ', 'üçÅ'];
            break;
        case 'v6fem':
        case 'vsfem6':
            titulo = '6VS6 FEM';
            players = ['ùñ©ùóéùóÄùñ∫ùñΩùóàùóãùñ∫ùóå'];
            iconos = ['ü¶ã', 'ü¶ã', 'ü¶ã', 'ü¶ã', 'ü¶ã', 'ü¶ã'];
            iconos2 = ['ü¶ã', 'ü¶ã'];
            break;
        case 'v6masc':
        case 'vsmasc6':
            titulo = '6VS6 MASC';
            players = ['ùñ©ùóéùóÄùñ∫ùñΩùóàùóãùñæùóå'];
            iconos = ['ü•û', 'ü•û', 'ü•û', 'ü•û', 'ü•û', 'ü•û'];
            iconos2 = ['ü•û', 'ü•û'];
            break;
        case 'v6mixto':
        case 'vsmixto6':
            titulo = '6VS6 MIXTO';
            players = ['ùñ©ùóéùóÄùñ∫ùñΩùóàùóãùñæùóå'];
            iconos = ['ü•Ø', 'ü•Ø', 'ü•Ø', 'ü•Ø', 'ü•Ø', 'ü•Ø'];
            iconos2 = ['ü•Ø', 'ü•Ø'];
            break;
        default:
            conn.reply(m.chat, '*‚ùå Comando no v√°lido.*', m);
            return;
    }

    const message = `ÍÜ¨ÍÜ¨       ›Ç    *${titulo}*    üåπ÷ü·çù  

  ‡¥§ *ùñ¨ùóàùñΩùñ∫ùóÖùóÇùñΩùñ∫ùñΩ:* ${modalidad}
  ‡¥§ *ùñßùóàùóãùñ∫:* ${horasEnPais.PE} üáµüá™ ${horasEnPais.AR} üá¶üá∑

„Ö§„Ö§„Ö§‡øô‡øö„Ö§◊Ö„Ö§‡øô‡øö‡øô‡øö„Ö§◊Ö„Ö§‡øô‡øö

 ◊Ñﬂ≥ëÅçÃµ ÷ïÔ∏µ·∑º€™€™€™€™ ÷º \`${players}::\` ◊Ö ◊Ñ‚ñë◊Ö

${iconos.map(icono => `${icono}Àö `).join('\n')}

      ÍõÅ‚µø÷πêëº·™≤ €™ \`ùñ≤ùóéùóâùóÖùñæùóáùóçùñæùóå\` ÷πÃº ◊Ö ‚ùúùÜ¨ ·®©Ãº

${iconos2.map(icono => `${icono}Àö `).join('\n')}

> ¬© ’è“ª·•≤·É´·®£·•ï ∆Å·®£∆ö U·•£ùóçr·•≤ Ô¢î`.trim();

    conn.sendMessage(m.chat, { text: message }, { quoted: fkontak });
};

handler.help = ['inmixto4', 'inmixto6', 'inmasc4', 'inmasc6', 'infem4', 'infem6'];
handler.tags = ['ff'];
handler.command = /^(v4fem|vsfem4|v4masc|vsmasc4|v4mixto|vsmixto4|v6fem|vsfem6|v6masc|vsmasc6|v6mixto|vsmixto6)$/i;

export default handler;*/


const handler = async (m, { text, conn, args, usedPrefix, command }) => { if (args.length < 2) { conn.reply(m.chat, *Proporciona una hora, pa√≠s y modalidad.*\n> *Ejemplo:* ${usedPrefix + command} 14 pe infinito, m); return; }

const horaRegex = /^([01]?[0-9]|2[0-3])(:[0-5][0-9])?$/;
if (!horaRegex.test(args[0])) {
    conn.reply(m.chat, '*‚è∞ Formato de hora inv√°lido.*', m);
    return;
}

let [hora, minutos] = args[0].includes(':') ? args[0].split(':').map(Number) : [Number(args[0]), 0];
const pais = args[1].toUpperCase();

const diferenciasHorarias = {
    CL: 2,
    AR: 2,
    PE: 0,
};

if (!(pais in diferenciasHorarias)) {
    conn.reply(m.chat, '*‚ö†Ô∏è Pa√≠s no v√°lido. Usa AR o PE.*', m);
    return;
}

const diferenciaHoraria = diferenciasHorarias[pais];
const formatTime = date => date.toLocaleTimeString('es', { hour12: false, hour: '2-digit', minute: '2-digit' });

const horasEnPais = {};
for (const key in diferenciasHorarias) {
    const horaActual = new Date();
    horaActual.setHours(hora, minutos, 0, 0);
    const horaEnPais = new Date(horaActual.getTime() + 3600000 * (diferenciasHorarias[key] - diferenciaHoraria));
    horasEnPais[key] = formatTime(horaEnPais);
}

const modalidad = args.slice(2).join(' ');
m.react('üéÆ');

let titulo = '', max = 0, icono = '';
switch (command) {
    case 'v4fem': case 'vsfem4': titulo = '4VS4 FEM'; icono = 'üå∏'; max = 4; break;
    case 'v4masc': case 'vsmasc4': titulo = '4VS4 MASC'; icono = 'ü••'; max = 4; break;
    case 'v4mixto': case 'vsmixto4': titulo = '4VS4 MIXTO'; icono = 'üçÅ'; max = 4; break;
    case 'v6fem': case 'vsfem6': titulo = '6VS6 FEM'; icono = 'ü¶ã'; max = 6; break;
    case 'v6masc': case 'vsmasc6': titulo = '6VS6 MASC'; icono = 'ü•û'; max = 6; break;
    case 'v6mixto': case 'vsmixto6': titulo = '6VS6 MIXTO'; icono = 'ü•Ø'; max = 6; break;
    default:
        conn.reply(m.chat, '*‚ùå Comando inv√°lido.*', m);
        return;
}

if (!conn.vs) conn.vs = {};
conn.vs[m.chat] = {
    titulo,
    modalidad,
    icono,
    max,
    jugadores: [],
    suplentes: [],
    horas: horasEnPais
};

const vs = conn.vs[m.chat];

const generarMensajeVS = () => {
    return `ÍÜ¨ÍÜ¨       ›Ç    *${vs.titulo}*    üåπ÷ü·çù

‡¥§ Modalidad: ${vs.modalidad} ‡¥§ Hora: ${vs.horas.PE} üáµüá™ ${vs.horas.AR} üá¶üá∑

‡øô‡øö Jugadores: ${vs.jugadores.length}/${vs.max} ${vs.jugadores.map((u, i) => ${vs.icono} ${i + 1}. @${u.split('@')[0]}).join('\n') || '‚Äî'}

ÍõÅ Suplentes: ${vs.suplentes.map((u, i) => ${vs.icono} ${i + 1}. @${u.split('@')[0]}).join('\n') || '‚Äî'}

> ¬© Shadow Bot`.trim(); };



conn.sendMessage(m.chat, {
    text: generarMensajeVS(),
    mentions: [...vs.jugadores, ...vs.suplentes],
    buttons: [
        { buttonId: '.anotarme', buttonText: { displayText: 'Anotarme' }, type: 1 },
        { buttonId: '.suplente', buttonText: { displayText: 'Suplente' }, type: 1 },
    ]
}, { quoted: m });

};

handler.command = /^(v4fem|vsfem4|v4masc|vsmasc4|v4mixto|vsmixto4|v6fem|vsfem6|v6masc|vsmasc6|v6mixto|vsmixto6)$/i;

export default handler;

const handlerAnotarme = async (m, { conn }) => { if (!conn.vs || !conn.vs[m.chat]) throw '‚ùå No hay un VS activo.'; const vs = conn.vs[m.chat]; const id = m.sender;

if (vs.jugadores.includes(id) || vs.suplentes.includes(id)) {
    throw '*‚ö†Ô∏è Ya est√°s anotado.*';
}
if (vs.jug

